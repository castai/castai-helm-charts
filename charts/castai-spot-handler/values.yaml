# Default values for castai-spot-handler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# labels to add to all resources
commonLabels: {}

# annotations to add to all resources
commonAnnotations: {}

image:
  repository: us-docker.pkg.dev/castai-hub/library/spot-handler
  # Tag is set using Chart.yaml appVersion field.
  tag: ""
  pullPolicy: IfNotPresent

castai:
  # CASTAI public api url.
  apiURL: "https://api.cast.ai"

  # CASTAI Cluster unique identifier.
  clusterID: ""

  # Cloud provider (azure, gcp, aws)
  provider: ""

podAnnotations: {}
podLabels: {}
additionalEnv:
  LOG_LEVEL: "5"
  POLL_INTERVAL_SECONDS: "3"

# Host network is used to access instance metadata endpoints which are not always available from pod network.
useHostNetwork: true

resources:
  requests:
    cpu: 5m
    memory: 10Mi
  limits:
    memory: 20Mi

rbac:
  enabled: true

serviceAccount:
  # Annotations to add to the service account.
  annotations: {}
  name: castai-spot-handler

# Pod toleration rules.
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations:
  - operator: Exists
    effect: NoSchedule

# Pod node selector rules.
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
nodeSelector:
  scheduling.cast.ai/spot: "true"

# Pod affinity rules.
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# Pod security context.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext:
  runAsNonRoot: true
  fsGroup: 1003
  runAsGroup: 1003
  runAsUser: 1003

# Name of secret with Token to be used for authorizing access to the API
# The referenced secret must provide the token in .data["API_KEY"]
apiKeySecretRef: ""
