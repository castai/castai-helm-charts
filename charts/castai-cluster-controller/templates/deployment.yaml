apiVersion: apps/v1
kind: Deployment
metadata:
  name: castai-cluster-controller
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "castai-agent.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "castai-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "castai-agent.selectorLabels" . | nindent 8 }}
      annotations:
      {{- if (.Values.aks | default dict ).enabled }}
        scheduling.cast.ai/lifecycle: "on-demand"
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if (.Values.priorityClass | default dict).enabled }}
      priorityClassName: {{ .Values.priorityClass.name }}
      {{- end }}
      serviceAccountName: castai-cluster-controller
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "kubernetes.io/os"
                    operator: In
                    values: [ "linux" ]
                  {{ if (.Values.aks | default dict ).enabled }}
                  - key: "kubernetes.azure.com/mode"
                    operator: In
                    values: [ "system" ]
                  {{- end }}
              - matchExpressions:
                  - key: "beta.kubernetes.io/os"
                    operator: In
                    values: [ "linux" ]
                  {{ if (.Values.aks | default dict ).enabled }}
                  - key: "kubernetes.azure.com/mode"
                    operator: In
                    values: [ "system" ]
                  {{- end }}
      containers:
        - name: cluster-controller
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: API_URL
              value: {{ required "apiURL must be provided" .Values.castai.apiURL | quote }}
            - name: CLUSTER_ID
              value: {{ required "clusterID must be provided" .Values.castai.clusterID | quote }}
          {{- range $k, $v := .Values.additionalEnv }}
            - name: {{ $k }}
              value: "{{ $v }}"
          {{- end }}
          envFrom:
            - secretRef:
                name: castai-cluster-controller
          {{- with .Values.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{ if (.Values.aks | default dict ).enabled }}
          volumeMounts:
            - name: waagent
              mountPath: /var/lib/waagent
          {{- end }}
      {{ if (.Values.aks | default dict ).enabled }}
      volumes:
        - name: waagent
          hostPath:
            path: /var/lib/waagent
            type: Directory
      {{- end }}
