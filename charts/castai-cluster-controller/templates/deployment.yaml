apiVersion: apps/v1
kind: Deployment
metadata:
  name: castai-cluster-controller
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "castai-agent.labels" . | nindent 4 }}
spec:
  strategy:
    {{- .Values.updateStrategy | toYaml | nindent 4 }}
  {{- if .Values.leaderElectionEnabled }}
  replicas: {{ .Values.replicas }}
  {{- else}}
  replicas: 1
  {{- end}}
  selector:
    matchLabels:
      {{- include "castai-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "castai-agent.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
      {{- if (.Values.aks | default dict ).enabled }}
        scheduling.cast.ai/lifecycle: "on-demand"
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if (.Values.priorityClass | default dict).enabled }}
      priorityClassName: {{ .Values.priorityClass.name }}
      {{- end }}
      serviceAccountName: castai-cluster-controller
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "kubernetes.io/os"
                    operator: In
                    values: [ "linux" ]
                  {{- if (.Values.aks | default dict ).enabled }}
                  - key: "kubernetes.azure.com/mode"
                    operator: In
                    values: [ "system" ]
                  {{- end }}
              - matchExpressions:
                  - key: "beta.kubernetes.io/os"
                    operator: In
                    values: [ "linux" ]
                  {{- if (.Values.aks | default dict ).enabled }}
                  - key: "kubernetes.azure.com/mode"
                    operator: In
                    values: [ "system" ]
                  {{- end }}
      containers:
        - name: cluster-controller
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- if .Values.leaderElectionEnabled }}
            - name: LEADER_ELECTION_ENABLED
              value: "true"
            - name: LEADER_ELECTION_LOCK_NAME
              value: "cluster-controller"
            - name: LEADER_ELECTION_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          {{- end }}
          {{- range $k, $v := .Values.additionalEnv }}
            - name: {{ $k }}
              value: "{{ $v }}"
          {{- end }}
          envFrom:
            - secretRef:
                name: castai-cluster-controller
            - configMapRef:
                name: castai-cluster-controller
          {{- with .Values.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if (.Values.aks | default dict ).enabled }}
          volumeMounts:
            - name: waagent
              mountPath: /var/lib/waagent
          {{- end }}
          ports:
            - containerPort: 6060
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              port: http
              path: /healthz
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              port: http
              path: /healthz
            initialDelaySeconds: 5
            periodSeconds: 5
      {{- if (.Values.aks | default dict ).enabled }}
      volumes:
        - name: waagent
          hostPath:
            path: /var/lib/waagent
            type: Directory
      {{- end }}
